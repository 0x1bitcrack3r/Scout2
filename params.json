{"name":"Scout2","tagline":"Security auditing tool for AWS environments","body":"## Description\r\n\r\nUsing the AWS API, the Scout2 Python scripts fetches EC2, IAM, and S3, configuration data. The gathered configuration is analyzed and stored as JSON objects in several JavaScript files. These files are imported in the Scout2 HTML report, which allows for a quick and efficient review of the AWS configuration.\r\n\r\n## HTML Report\r\n\r\nThe Scout2 Python script populates JavaScript variables displayed in the HTML report. In addition to displaying the AWS configuration, the AWS Scout2 HTML report highlights high-risk areas automatically. Potential findings are highlight with two different colors\r\n * red :: danger\r\n * orange :: warning\r\n\r\n### EC2 view\r\n\r\nSecurity Groups are the first layer of defense for EC2 instances ([AWS documentation](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Security.html#VPC_Security_Comparison)), and control both inbound and outbound traffic at the instance level. AWS Scout2 has a default ruleset that reports known sensitive ports that are open to the Internet (in the following screenshot, 22/SSH). Additionally, the default ruleset also reports open ports whose number are associated with plaintext protocol (in the following screenshot, 23/Telnet).\r\n\r\n<img src=\"//isecpartners.github.io/Scout2/images/aws-screenshot-ec2-sg.png\" width=\"100%\" alt=\"EC2 Security Groups view\">\r\n\r\nNetwork ACLs are the second layer of defense, and control traffic in and out of a subnet. AWS Scout2 has an EC2/Network ACLs view that reports all existing rules:\r\n\r\n<img src=\"//isecpartners.github.io/Scout2/images/aws-screenshot-ec2-acls.png\" width=\"100%\" alt=\"EC2 Network ACLs view\">\r\n\r\n### IAM view\r\n\r\nThe IAM tab in the HTML report allows to review IAM users, groups and roles. In the following screenshot, AWS Scout2 reports two dangerous findings (lack of Multi-Factor Authentication, lack of access-key rotation), and warns about a third one (support for two types of authentication).\r\n\r\n<img src=\"//isecpartners.github.io/Scout2/images/aws-screenshot-iam-user.png\" width=\"100%\" alt=\"IAM Users view\">\r\n\r\nWhen reviewing IAM users' settings, you can access details about IAM groups they belong to by clicking on the name of the group. This will overlay the IAM group details, including policies and other members.\r\n\r\n<img src=\"//isecpartners.github.io/Scout2/images/aws-screenshot-iam-user-group-details.png\" width=\"100%\" alt=\"IAM Users view, with IAM group details\">\r\n\r\nThe IAM view also offers a permission summary that lists all permissions that are granted, or denied, throughout the AWS account policies. For each permission, a list of IAM users, groups and roles is provided, along with the resources accessible to each of them.\r\n\r\n<img src=\"//isecpartners.github.io/Scout2/images/aws-screenshot-iam-permissions.png\" width=\"100%\" alt=\"IAM Permissions view\">\r\n\r\n## S3 view\r\n\r\nAWS Scout2 fetches the S3 configuration as well. The default ruleset highlights buckets that are world-writable, and whose permissions are world-writable. Additionally, a warning is displayed for world-readable buckets.\r\n\r\n<img src=\"//isecpartners.github.io/Scout2/images/aws-screenshot-s3-worldwrite.png\" width=\"100%\" alt=\"S3 Buckets view\">\r\n\r\n## Default rulesets\r\n\r\nAWS Scout2 comes with the following default rulesets:\r\n\r\n### EC2 default ruleset\r\n<table width=\"100%\"><thead><tr>\r\n<th width=\"90%\">Description</th><th>Level</th>\r\n</tr></thead><tr>\r\n<td width=\"90%\">Sensitive port open to the Internet (e.g. SSH, RDP, SQL, ...)</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Plaintext-protocol port open (e.g. FTP, Telnet, ...)</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Non-HTTP ports open to the Internet (not 80/443)</td><td>warning</td>\r\n</tr><tr>\r\n<td width=\"90%\">Lack of network ACLs (Inbound)</td><td>warning</td>\r\n</tr><tr>\r\n<td width=\"90%\">Lack of network ACLs (Outbound)</td><td>warning</td>\r\n</tr></table>\r\n\r\n### IAM default ruleset\r\n<table width=\"100%\"><thead><tr>\r\n<th width=\"90%\">Description</th><th>Level</th>\r\n</tr></thead><tr>\r\n<td width=\"90%\">Lack of key rotation</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Lack of (inactive) key rotation</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Lack of Multi-Factor Authentication</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Password and Access Key authorized for a given account</td><td>warning</td>\r\n</tr><tr>\r\n<td width=\"90%\">Existence of user policy</td><td>warning</td>\r\n</tr></table>\r\n\r\n### S3 default ruleset\r\n<table width=\"100%\"><thead><tr>\r\n<th width=\"90%\">Description</th><th>Level</th>\r\n</tr></thead><tr>\r\n<td width=\"90%\">Bucket world-writable</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Bucket's permissions world-writable</td><td>danger</td>\r\n</tr><tr>\r\n<td width=\"90%\">Bucket world-readable</td><td>danger</td>\r\n</tr></table>\r\n\r\n## How to create a new rule\r\n\r\n### Directions\r\n\r\n1. Open the default ruleset you wish to enhance, and create a new entry.\r\n2. Define and implement the new callback in the corresponding utils file.\r\n3. Update the report.html to highlight thew new finding.\r\n\r\n### Example\r\n\r\nThe following code snippets illustrate the addition of a new rule. In this example, the new rule warns against the use of user policies (this rule is now part of the default ruleset).\r\n\r\n`git diff rules/findings-iam.default.json`:\r\n```\r\n+    },\r\n+    \"user-policy\": {\r\n+        \"description\": \"User policies\",\r\n+        \"entity\": \"users\",\r\n+        \"callback\": \"hasUserPolicy\",\r\n+        \"callback_args\": \"\",\r\n+        \"level\": \"warning\"\r\n+    }\r\n```\r\n\r\n`git diff AWSScout2/finding_iam.py`:\r\n```\r\n+\r\n+    def hasUserPolicy(self, key, obj):\r\n+        if len(obj['policies']) > 0:\r\n+            self.addItem(obj['user_name'], obj['user_name'])\r\n```\r\n\r\n`git diff report.html`:\r\n```\r\n-              <h4 class=\"list-group-item-heading\">User Policies <spcan class=\"badge pull-right\">{{count policies}}</span></h4>\r\n+              <h4 class=\"list-group-item-heading\">User Policies <span class=\"badge pull-right\" id=\"iam_users-user-policy-{{user_name}}\">{{count policies}}</span></h4>\r\n```\r\n\r\n## Authors and Contributors\r\n* Loic Simon - @l01cd3v","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}